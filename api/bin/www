// module dependencies
const app = require("../app");
const debug = require("debug")("NigeriaApi:server");
const http = require("http");

// Get the Port from envireonment and store in express

const port = normalizePort(process.env.PORT || "3000");

app.set("port", port);

// now server creation goes here
const server = http.createServer(app);

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

function onError(err) {
  if (err.syscall !== "listen") {
    throw err;
  }

  const bind = typeof port === "string" ? `Pipe ${port}` : `port ${port}`;

  // handling specific listening error with some message
  switch (err.code) {
    case "EACCES":
      console.error(`${bind} requires elevated priviledges`);
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw err;
  }
}

// event lstener for HTTP server 'listening' event

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? `Pipe ${addr}` : `port ${addr}`;
  debug(`Listening on ${bind}`);
}
